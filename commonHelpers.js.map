{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n      });\n\n     \n      document.querySelector(\"[data-start]\").disabled = true;\n    } else {\n      \n      document.querySelector(\"[data-start]\").disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  \n  const days = Math.floor(ms / day);\n  \n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); \nconsole.log(convertMs(140000)); \nconsole.log(convertMs(24140000)); \n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n  document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n  document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n  document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n}\n\nlet countdownInterval;\n\ndocument.querySelector(\"[data-start]\").addEventListener(\"click\", () => {\n  const userSelectedDate = flatpickr(\"#datetime-picker\").selectedDates[0];\n\n  \n  const timeDifference = userSelectedDate - new Date();\n\n  if (timeDifference <= 0) {\n    izitoast.error({\n      title: \"Error\",\n      message: \"Please choose a date in the future\",\n    });\n    return;\n  }\n\n  \n  updateTimer(timeDifference);\n\n  \n  countdownInterval = setInterval(() => {\n    \n    updateTimer(timeDifference);\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      izitoast.success({\n        title: \"Success\",\n        message: \"Countdown has ended!\",\n      });\n    }\n\n    timeDifference -= 1000;\n  }, 1000);\n});\n"],"names":["options","selectedDates","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","countdownInterval","timeDifference"],"mappings":"2GAMA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAE3B,kBAAoB,IAAI,MACvBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAGD,SAAS,cAAc,cAAc,EAAE,SAAW,IAGlD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,SAASM,EAAYL,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtD,SAAS,cAAc,aAAa,EAAE,YAAcH,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC/E,CAEA,IAAIE,EAEJ,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAIrE,MAAMC,EAHmBX,EAAU,kBAAkB,EAAE,cAAc,GAG3B,IAAI,KAE9C,GAAIW,GAAkB,EAAG,CACvB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACD,MACD,CAGDF,EAAYE,CAAc,EAG1BD,EAAoB,YAAY,IAAM,CAEpCD,EAAYE,CAAc,EAEtBA,GAAkB,IACpB,cAAcD,CAAiB,EAC/B,SAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACjB,CAAO,GAGHC,GAAkB,GACnB,EAAE,GAAI,CACT,CAAC"}